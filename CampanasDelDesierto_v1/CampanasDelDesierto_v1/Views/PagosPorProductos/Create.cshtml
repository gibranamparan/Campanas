@using CampanasDelDesierto_v1.Models
@using System;
@model CampanasDelDesierto_v1.Models.PagoPorProducto

@{
    ViewBag.Title = "Cosecha";
    Layout = "~/Views/Shared/_Layout.cshtml";


    Productor productor = ViewBag.productor;
    TemporadaDeCosecha.VMTipoProducto[] tipoProductos = Model.temporadaDeCosecha.getListaProductos();
    TemporadaDeCosecha.VMTipoProducto primerProducto = tipoProductos[0];

    /*Just for test*/
    Random random = new Random();
    Model.numeroSemana = random.Next(1, 9);
    Model.cantidadProducto = 1;
    Model.montoMovimiento = (decimal)Model.cantidadProducto * primerProducto.Value;

}
<p>
    <a href="@Url.Action("Details","Productores", new { id = productor.idProductor, temporada = Model.TemporadaDeCosechaID })">
        <i class="glyphicon glyphicon-usd"></i> Ver Movimientos de este productor
    </a>
</p>
@Html.Partial("../Productores/Partial_InfoProductor", productor)

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.idProductor)
    @Html.HiddenFor(mode=>mode.TemporadaDeCosechaID)
    <div class="form-horizontal">
        <h4>Pago por producto</h4>
        <div class="alert alert-info">
            <strong>@Html.DisplayNameFor(model => model.temporadaDeCosecha.rangoTiempo) de Temporada: </strong>@Html.DisplayFor(model => model.temporadaDeCosecha.rangoTiempo).
            <div class="row">
                <span class="col-md-3">
                    <label>@(Model.temporadaDeCosecha.tipoProducto1): </label>
                    @(Model.temporadaDeCosecha.precioProducto1.ToString("C"))
                </span>
                <span class="col-md-3">
                    <label>@(Model.temporadaDeCosecha.tipoProducto2): </label>
                    @(Model.temporadaDeCosecha.precioProducto2.ToString("C"))
                </span>
                <span class="col-md-3">
                    <label>@(Model.temporadaDeCosecha.tipoProducto3): </label>
                    @(Model.temporadaDeCosecha.precioProducto3.ToString("C"))
                </span>
                <span class="col-md-3">
                    <label>@(Model.temporadaDeCosecha.tipoProductoOtro): </label>
                    @(Model.temporadaDeCosecha.precioProductoOtro.ToString("C"))
                </span>
            </div>
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.fechaMovimiento, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.fechaMovimiento, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.fechaMovimiento, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.numeroSemana, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.numeroSemana, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.numeroSemana, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <fieldset class="form-group">
            <legend>Cálculo de monto total</legend>
            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.tipoProducto, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="hidden" name="tipoProducto" value="@primerProducto.Text" />
                        @Html.DropDownListFor(model => model.tipoProducto, new SelectList(tipoProductos, "Value", "Text", primerProducto),
                        new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.tipoProducto, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.cantidadProducto, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.cantidadProducto, new
                           {
                               htmlAttributes = new { @class = "form-control",
                                   data_mask = "###0.000", data_mask_reverse = "true" }
                           })
                        @Html.ValidationMessageFor(model => model.cantidadProducto, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-6">
                    <label class="control-label col-md-2">Precio por Ton.</label>
                    <div class="col-md-10">
                        <input id="precioPorTon" value="@primerProducto.Value"
                               class="form-control" data_mask="###0.00" data_mask_reverse="true" />
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.montoMovimiento, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.montoMovimiento, new
                   {
                       htmlAttributes = new { @class = "form-control",
                           @readonly = "readonly",
                           data_mask = "###0.00",
                           data_mask_reverse = "true"}
                   })
                        @Html.ValidationMessageFor(model => model.montoMovimiento, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </fieldset>

        <div class="form-group">
            <div class="col-md-10">
                <button class="btn btn-success">Crear</button>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var cantidad = 1;
        var precioPorTon = @primerProducto.Value;
        $("#tipoProducto").change(function () {
            precioPorTon = $(this).val();
            $("#precioPorTon").val($(this).val());
            $("input[name='tipoProducto']").val($(this).find(":selected").text())
            recalcularMontoTotal();
        })

        $("#precioPorTon").keyup(function () {
            if (!$(this).val()) {
                precioPorTon = 0;
            } else {
                precioPorTon = $(this).val();
            }
            recalcularMontoTotal();
        })

        $("#cantidadProducto").keyup(function () {
            if (!$(this).val()) {
                cantidad = 0;
            } else {
                cantidad = $(this).val();
            }
            recalcularMontoTotal();
        })

        function recalcularMontoTotal() {
            montoTotal = cantidad * precioPorTon;
            $("#montoMovimiento").val(numeral(montoTotal).format('0.00')).trigger('input');
        }

        recalcularMontoTotal();
    </script>
}
