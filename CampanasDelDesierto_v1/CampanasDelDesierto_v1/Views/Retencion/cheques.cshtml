@model CampanasDelDesierto_v1.Models.Retencion
@using CampanasDelDesierto_v1.HerramientasGenerales
@using CampanasDelDesierto_v1.Models.SistemaProductores

@{
    ViewBag.Title = "Cheques de Retencion de "+Model.nombreTipoDeduccion;
    Layout = "~/Views/Shared/_Layout.cshtml";
    VMConfirmModalAttributes vmOptionsCancel = new VMConfirmModalAttributes
    {
        action = "Cancelar",
        controller = "Retencion",
        modalID = "modalCancelarCheque",
        primaryMessage = "Si confirmar, eliminar el registro del cheque seleccionado con número <strong id='strongNumCheque'></strong>.",
        modalStyle = new VMConfirmModalAttributes.Style(VMConfirmModalAttributes.Style.StyleTypes.DANGER),
        modalTitle = "Cancelar Cheque",
        callType = VMConfirmModalAttributes.CallType.POSTBACK
    };
}

@*Modal de confirmacion de cancelacion de cheque*@
@Html.Partial("Partial_ConfirmationModal",vmOptionsCancel)

<nav>
    <a href="@Url.Action("Details","Productores",new { id = Model.idProductor})">
        <i class="fa fa-arrow-left"></i><span>Volver a Movimientos del Productor</span>
    </a>
</nav>
<div class="panel panel-primary">
    <div class="panel-heading">
        <span class="panel-primary">
            Retención: <strong style="color:white">@(Model.nombreTipoDeduccion)</strong>
        </span>
    </div>
    <div class="panel-body">
        <div class="form-group col-xs-3 col-xs-3">
            @Html.LabelFor(model => model.Productor.nombreProductor, new { @class = "control-label" })
            <p class="form-control-static">@Html.DisplayFor(model => model.Productor.nombreProductor)</p>
        </div>
        <div class="form-group col-xs-3 col-xs-3">
            <label class="control-label">Ret. en Liq. de @Html.DisplayNameFor(model => model.liquidacionSemanal.cheque)</label>
            <p class="form-control-static">@Html.DisplayFor(model => model.liquidacionSemanal.cheque)</p>
        </div>
        <div class="form-group col-xs-3 col-xs-3">
            @Html.LabelFor(model => model.montoMovimiento, new { @class = "control-label" })
            <p class="form-control-static">@Math.Abs(Model.montoMovimiento).ToString("C")</p>
        </div>
        <div class="form-group col-xs-3 col-xs-3">
            @Html.LabelFor(model => model.montoPorPagar, new { @class = "control-label" })
            <p class="form-control-static">@Math.Abs(Model.montoPorPagar).ToString("C")</p>
        </div>
    </div>
</div>

@*Forma de registro de nuevo cheque para esta retencion*@
@{ 
    ViewDataDictionary vddFormCheque = new ViewDataDictionary();
    vddFormCheque.Add("retencion", Model);
}
@Html.Partial("Form_RetencionCheque", new RetencionCheque(), vddFormCheque)

<div class="panel panel-primary">
    <div class="panel-heading">
        <span class="panel-primary">@Html.DisplayNameFor(model=>model.cheques)</span>
    </div>
    <div class="panel-body">
        @if (Model.cheques != null && Model.cheques.Count() > 0)
        {
            if (Model.estaPagada) {
                <div class="alert alert-success">
                    Retencion pagada completamente.
                </div>
            }
        <table class="table table-hover table-striped table-responsive">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.cheques.FirstOrDefault().numCheque)</th>
                    <th>@Html.DisplayNameFor(model => model.cheques.FirstOrDefault().fecha)</th>
                    <th>@Html.DisplayNameFor(model => model.cheques.FirstOrDefault().monto)</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach(var item in Model.cheques) { 
                <tr>
                    <td>@Html.DisplayFor(model=>item.numCheque)</td>
                    <td>@Html.DisplayFor(model => item.fecha)</td>
                    <td>@Html.DisplayFor(model => item.monto)</td>
                    <td>
                        <a href="@Url.Action("Imprimir",new { id = item.chequeID})" target="_blank">
                            <i class="fa fa-print"></i><span>Imprimir</span>
                        </a><span>|</span>
                        <a href="#" id_cheque="@item.chequeID" num_cheque="@item.numCheque"
                           onclick="prepararModal(this)" data-toggle="modal" data-target="#@vmOptionsCancel.modalID">
                            <i class="fa fa-remove"></i><span>Cancelar</span>
                        </a>
                    </td>
                </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <th colspan="2">@Html.DisplayNameFor(model=>model.montoPagado)</th>
                    <td colspan="2">@Html.DisplayFor(model => model.montoPagado)</td>
                </tr>
            </tfoot>
        </table>
        }
        else
        {
            <div class="alert alert-warning">
                <strong>No hay cheques</strong> registrados para esta retención.
            </div>
        }
    </div>
</div>

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function prepararModal(enlace) {
            enlace = $(enlace);
            var btnConfirmar = $('#@(vmOptionsCancel.modalID) #btnConfirm');
            var strongNumCheque = $('#@(vmOptionsCancel.modalID) #strongNumCheque');
            var url = btnConfirmar.attr('href')
            url += '/'+enlace.attr('id_cheque')
            btnConfirmar.attr('href',url)
            strongNumCheque.html(enlace.attr('num_cheque'))
        }
    </script>
    @if (Model.estaPagada)
    {
        <script>
            bloquear_forma_cheque()
        </script>
    }
}