@using CampanasDelDesierto_v1.Models
@model CampanasDelDesierto_v1.Models.VentaACredito

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Productor productor = ViewBag.productor;
    Model.cantidadMaterial = 1;
}

<p>
    <a href="@Url.Action("Details","Productores", new { id = productor.idProductor })">
        <i class="glyphicon glyphicon-usd"></i> Ver Movimientos de este productor
    </a>
</p>
<div class="panel panel-info">
    <div class="panel-heading">
        <h3 class="panel-title">Información del productor</h3>
    </div>
    <div class="panel-body">
        @Html.Partial("../Productores/Partial_InfoProductor", productor)
    </div>
</div>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model=>model.idProductor)
    
    <div class="form-horizontal">
        <h4>Nueva venta de material a crédito</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.fechaMovimiento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fechaMovimiento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fechaMovimiento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idProducto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idProducto", null,string.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idProducto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cantidadMaterial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cantidadMaterial, new { htmlAttributes = new { @class = "form-control", min=1 } })
                @Html.ValidationMessageFor(model => model.cantidadMaterial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.montoMovimiento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.montoMovimiento, new
           {
               htmlAttributes = new { @class = "form-control", data_mask = "###0.00", data_mask_reverse = "true", disabled= "disabled" }
           })
                @Html.ValidationMessageFor(model => model.montoMovimiento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button class="btn btn-primary">Crear</button>
            </div>
        </div>
    </div>
}

<div>
    <a href="@Url.Action("Index")">
        <i class="glyphicon glyphicon-arrow-left"></i>Volver a la lista
    </a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $("#idProducto").change(function () {
            //Se toma la llave unica de este cliente
            var antiForgeryToken = $("input[name=__RequestVerificationToken]").val();

            var costoProducto = 0;
            var cantidad = $("#cantidadMaterial").val();
            //Se hace la solicitud indetificandose con la llave unica
            $.postJSON("/Productos/productoInfo", { id: $(this).val() }, 'JSON',
                function (res) {
                    costoProducto = res.costo;
                    actualizarMontoTotal();
                },
                function () { }, function () { },
                antiForgeryToken
            );

            $("#cantidadMaterial").keyup(function () {
                cantidad = $(this).val();
                actualizarMontoTotal();
            })

            function actualizarMontoTotal(){
                montoTotal = costoProducto * cantidad;
                $("#montoMovimiento").val(montoTotal)
            }
        })

    </script>
}
