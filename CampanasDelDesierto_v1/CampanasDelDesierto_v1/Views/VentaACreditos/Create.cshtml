@using CampanasDelDesierto_v1.Models
@model CampanasDelDesierto_v1.Models.VentaACredito

@{
    bool editMode = Model.idMovimiento > 0;
    ViewBag.Title = (editMode ? "Editar" : "Nuevo") + " Venta de Material";
    Layout = "~/Views/Shared/_Layout.cshtml";

    Productor productor = ViewBag.productor;
    List<Producto> Productos = ViewBag.productos;

    ViewDataDictionary vdd = new ViewDataDictionary();
    vdd.Add("selectMode", true);

    List<CompraProducto> compras = null;
    if (editMode) {
        //Se obtiene las compras vendidas para ser editadas
        compras = Model.ComprasProductos.ToList();
    }
    vdd.Add("compras", compras);
}

<p>
    <a href="@Url.Action("Details","Productores", new { id = productor.idProductor , temporada = Model.TemporadaDeCosechaID})">
        <i class="glyphicon glyphicon-arrow-left"></i> Ver Movimientos de este Productor
    </a>
</p>
@Html.Partial("../Productores/Partial_InfoProductor", productor)
@Html.Partial("Partial_ListaProductos", Productos, vdd)
<div id="mensajes" class="container"></div><br />

<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title">Nueva venta de material a crédito</h3>
    </div>
    <div class="panel-body">
        <div class="alert alert-info">
            <strong>@Html.DisplayNameFor(model => model.temporadaDeCosecha.rangoTiempo) de Temporada: </strong>
            @Html.DisplayFor(model => model.temporadaDeCosecha.rangoTiempo).
        </div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.idProductor)
            @Html.HiddenFor(model => model.TemporadaDeCosechaID)
            @Html.Hidden("compras")

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.fechaMovimiento, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.fechaMovimiento, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.fechaMovimiento, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.montoMovimiento, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.montoMovimiento, new
                       {
                           htmlAttributes =
                                   new
                                   {
                                       @class = "form-control",
                                       data_mask = "###0.00",
                                       data_mask_reverse = "true",
                                       @readonly = "readonly"
                                   }
                       })
                        @Html.ValidationMessageFor(model => model.montoMovimiento, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.pagareVenta, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.pagareVenta, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.pagareVenta, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.conceptoDeVenta, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.conceptoDeVenta, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.conceptoDeVenta, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        <button id="crear" type="submit" disabled class="btn btn-success">
                            @(editMode ? "Guardar" : "Registrar")
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        //Data table select sigle row
        var COLS_ENUM = Object.freeze({ CANTIDAD: 1, ID: 2, PROD1: 4 })
        var table = $('#Productos').DataTable({
            columnDefs: [{
                    orderable: false,
                    className: 'select-checkbox',
                    targets: 0
                }, {
                    visible: false,
                    searchable: false
                }],
                select: {
                    style: 'os',
                    selector: 'td:first-child'
                },
                order: [[1, 'asc']]
            });

            table.on('select', function (e, dt, type, indexes) {
            funcionRecalcularMontos();
        })
        .on('deselect',function(e, dt, type, indexes){
            funcionRecalcularMontos();
        });

        function funcionRecalcularMontos() {
            compras = new Array();
            var selectedRows = table.rows({selected:true});
            var data = selectedRows.data();
            var totalCant1 = 0; var costoUnitario = 0;

            var cantidad = $('#cantidadMaterial').val();
            if (data.length==0) {
                $('#crear').attr('disabled', true);
            }
            else
            {
                for (var c = 0; c < data.length; c++) {
                    costoUnitario = Number(data[c][COLS_ENUM.PROD1].replace('$', ''));
                    newItem = {
                        idProducto: Number(data[c][COLS_ENUM.ID]),
                        cantidadMaterial: $('#producto' + data[c][COLS_ENUM.ID]).val(),
                        costo: costoUnitario
                    };
                    compras.push(newItem);
                    totalCant1 += newItem.cantidadMaterial * newItem.costo;
                }
                $('#crear').attr('disabled', false);
            }

            $('#montoMovimiento').val(numeral(totalCant1).format('0.00')).trigger('input');
            $('#montoMovimiento').attr('value', totalCant1);
            console.log(JSON.stringify(compras))
            $('#compras').val(JSON.stringify(compras))
        }

        $("#cantidadMaterial").change(function () {
            funcionRecalcularMontos();
        });
    </script>

    @if(editMode){
    <script>
        $('#Productos').DataTable().table().rows('[default-selected]').select();
    </script>
    }
}