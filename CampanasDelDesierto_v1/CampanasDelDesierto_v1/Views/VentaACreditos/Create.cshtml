@using CampanasDelDesierto_v1.Models
@model CampanasDelDesierto_v1.Models.VentaACredito

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Productor productor = ViewBag.productor;
    Model.cantidadMaterial = 1;
    List<Producto> Productos = ViewBag.productos;

    ViewDataDictionary vdd = new ViewDataDictionary();
    vdd.Add("selectMode", true);
}

<p>
    <a href="@Url.Action("Details","Productores", new { id = productor.idProductor , temporada = Model.TemporadaDeCosechaID})">
        <i class="glyphicon glyphicon-arrow-left"></i> Ver Movimientos de este Productor
    </a>
</p>
@Html.Partial("../Productores/Partial_InfoProductor", productor)
@Html.Partial("Partial_ListaProductos", Productos, vdd)
<div id="mensajes" class="container"></div><br />

<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title">Nueva venta de material a crédito</h3>
    </div>
    <div class="panel-body">
        <div class="alert alert-info">
            <strong>@Html.DisplayNameFor(model => model.temporadaDeCosecha.rangoTiempo) de Temporada: </strong>@Html.DisplayFor(model => model.temporadaDeCosecha.rangoTiempo).
        </div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.idProductor)
            @Html.HiddenFor(model => model.TemporadaDeCosechaID)
            @Html.Hidden("idProducto")

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.fechaMovimiento, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.fechaMovimiento, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.fechaMovimiento, "", new { @class = "text-danger" })
                        </div>
                    </div>

                            @*<div class="form-group col-md-6">
                @Html.LabelFor(model => model.idProducto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("idProducto", null, "Selecciona un producto", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.idProducto, "", new { @class = "text-danger" })
                </div>
            </div>*@
                </div>

                <div class="row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.cantidadMaterial, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.cantidadMaterial, new { htmlAttributes = new { @class = "form-control", min = 1 } })
                            @Html.ValidationMessageFor(model => model.cantidadMaterial, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        <label class="control-label col-md-2">Costo Unitario (USD)</label>
                        <div class="col-md-10">
                            <input id="costoUnitario" class="form-control"
                                   data-mask="###0.00" data-mask-reverse="true" disabled />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.montoMovimiento, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.montoMovimiento, new
               {
                   htmlAttributes = new { @class = "form-control", data_mask = "###0.00", data_mask_reverse = "true", disabled = "disabled" }
               })
                            @Html.ValidationMessageFor(model => model.montoMovimiento, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-10">
                        <button id="crear" disabled class="btn btn-success">Crear</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var costoProducto = 0;
        var cantidad = $("#cantidadMaterial").val();
        $("#idProducto").change(function () {
            //Se toma la llave unica de este cliente
            var antiForgeryToken = $("input[name=__RequestVerificationToken]").val();
            //Se hace la solicitud indetificandose con la llave unica
            $.postJSON("/Productos/productoInfo", { id: $(this).val() }, 'JSON',
                function (res) {
                    costoProducto = res.costo;
                    $('#costoUnitario').val(numeral(costoProducto)
                        .format('0.00')).trigger('input');
                    actualizarMontoTotal();
                },
                function () { }, function () { },
                antiForgeryToken );
        })

        var actualizarMontoTotal = function () {
            cantidad = parseInt($("#cantidadMaterial").val());
            montoTotal = costoProducto * cantidad;
            $("#montoMovimiento").val(numeral(montoTotal).format('0.00')).trigger('input')
        }

        $("#cantidadMaterial").bind('input', actualizarMontoTotal);

        function actualizarMontoTotal(){
            montoTotal = costoProducto * cantidad;
            $("#montoMovimiento").val(numeral(montoTotal).format('0.00')).trigger('input');
        }

        //Data table select sigle row
        var COLS_ENUM = Object.freeze({ ID: 1 })
        var table = $('#Productos').DataTable({
            columnDefs: [{
                orderable: false,
                className: 'select-checkbox',
                targets: 0
            }, {
                visible: false,
                searchable: false
            }],
            select: {
                style: 'os',
                selector: 'td:first-child'
            },
            order: [[1, 'asc']]
        });
        //Al Seleccionar un activo
        $('#Productos tbody').on('click', 'tr', function () {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
                $('#idProducto').val('');
                $('#crear').attr('disabled', true);
                $('#mensaje').remove();
                $('#mensajes').append("<div id='mensaje' class='alert alert-danger'>¡Seleccione un Producto!</div>");

            }
            else {
                table.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');                
                var row = $(this).closest('tr')[0];
                var rowData = table.row(row).data();
                if (rowData) {
                    $('#mensaje').remove();
                    var rowId = rowData[1];
                    $('#idProducto').val(rowId);
                    $('#crear').attr('disabled', false);
                }

            }
        });
     

    </script>
}
