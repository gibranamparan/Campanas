@model CampanasDelDesierto_v1.Models.VentaACredito
@{ 
    var compras = Model.ComprasProductos;
    List<CampanasDelDesierto_v1.Models.PrestamoYAbonoCapital.VMInteres> intereses = Model.generarSeguimientoPagosConInteres(DateTime.Now);
}

<div class="form-group col-md-4">
    @Html.LabelFor(model => model.pagareVenta, new { @class = "control-label col-md-3" })
    <div class="col-md-9">
        <p class="form-control-static">@Html.DisplayFor(model => model.pagareVenta)</p>
    </div>
</div>
<div class="form-group col-md-4">
    @Html.LabelFor(model => model.conceptoDeVenta, new { @class = "control-label col-md-3" })
    <div class="col-md-9">
        <p class="form-control-static">@Html.DisplayFor(model => model.conceptoDeVenta)</p>
    </div>
</div>
<div class="form-group col-md-4">
    @Html.LabelFor(model => model.ordenCompra, new { @class = "control-label col-md-3" })
    <div class="col-md-9">
        <p class="form-control-static">@Html.DisplayFor(model => model.ordenCompra)</p>
    </div>
</div>
<div class="form-group col-md-4">
    @Html.LabelFor(model => model.montoActivo, new { @class = "control-label col-md-3" })
    <div class="col-md-9">
        <p class="form-control-static">@Html.DisplayFor(model => model.montoActivo)</p>
    </div>
</div>

<div class="col-md-12">
    @*LISTA DE LOS PRODUCTOS COMPRADOS*@
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th width="10em">
                    @Html.DisplayNameFor(model=> compras.FirstOrDefault().cantidadMaterial)
                </th>
                <th width="20%">
                    @Html.DisplayNameFor(model => compras.FirstOrDefault().producto.nombreProducto)
                </th>
                <th width="10em">
                    @Html.DisplayNameFor(model => compras.FirstOrDefault().producto.costo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => compras.FirstOrDefault().producto.descripcion)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var compra in Model.ComprasProductos)
            {
                <tr>
                    <td width="10em">
                        @Html.DisplayFor(model=>compra.cantidadMaterial)
                    </td>
                    <td width="20%">
                        @Html.DisplayFor(model => compra.producto.nombreProducto)
                    </td>
                    <td width="10em">
                        @Html.DisplayFor(model => compra.producto.costo)
                    </td>
                    <td>
                        @Html.DisplayFor(model => compra.producto.descripcion)
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @Html.Partial("../MovimientoFinancieros/Partial_ListarIntereses", intereses)

    <h4>Abonos recibidos</h4>
    @if (Model.abonosRecibidos.Count() > 0)
    {
    <div class="col-md-12">
        <table class="table table-hover table-striped">
            <tr>
                <th>No. Pagaré/Compra</th>
                <th>@Html.DisplayNameFor(model => model.abonosRecibidos.FirstOrDefault().abono.fechaMovimiento)</th>
                <th>@Html.DisplayNameFor(model => model.abonosRecibidos.FirstOrDefault().abono.montoMovimiento)</th>
                <th>Monto Distribuido</th>
                <th>@Html.DisplayNameFor(model => model.abonosRecibidos.FirstOrDefault().abono.montoActivo)</th>
            </tr>
            @foreach (var mov in Model.abonosRecibidos)
            {
                <tr>
                    <td>
                        <a href="@Url.Action("Details",new { id = mov.abonoID })" target="_blank">
                            Ver @Html.DisplayFor(model=>mov.abono.pagare)
                        </a>
                    </td>
                    <td>@Html.DisplayFor(model => mov.abono.fechaMovimiento)</td>
                    <td>@Html.DisplayFor(model => mov.abono.montoMovimiento)</td>
                    <td>@Html.DisplayFor(model => mov.monto)</td>
                    <td>@Html.DisplayFor(model => mov.abono.montoActivo)</td>
                </tr>
            }
        </table>
    </div>
    }
    else
    {
    <div class="alert alert-warning col-md-12">
        Este prestamo <strong>no ha recibido</strong> ningún abono.
    </div>
    }
</div>

