@using CampanasDelDesierto_v1.Models
@model CampanasDelDesierto_v1.Models.LiquidacionSemanal

@{ 
    var movimientos = Model.retenciones.OrderBy(mov => mov.fechaMovimiento);
}

<div>
    <div class="form-group col-md-4">
        @Html.LabelFor(model => model.cheque, new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            <p class="form-control-static">@Html.DisplayFor(model => model.cheque)</p>
        </div>
    </div>
    <div class="form-group col-md-4">
        @Html.LabelFor(model => model.Productor.nombreCheque, new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            <p class="form-control-static">@Html.DisplayFor(model => model.Productor.nombreCheque)</p>
        </div>
    </div>
</div>


@if (Model != null && movimientos.Count() > 0)
{
    <div class="col-md-12">
        <table class="table table-hover table-striped">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => movimientos.FirstOrDefault().fechaMovimiento)
                </th>
                <th>
                    @Html.DisplayNameFor(model => movimientos.FirstOrDefault().montoMovimiento)
                </th>
                <th>
                    @Html.DisplayNameFor(model => movimientos.FirstOrDefault().nombreDeMovimiento)
                </th>
            </tr>

            @foreach (var item in movimientos)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.fechaMovimiento)
                    </td>
                    <td class='@(item.montoMovimiento<0?"montoNegativo":"")'>
                        @Html.DisplayFor(modelItem => item.montoMovimiento)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.nombreDeMovimiento)
                    </td>
                </tr>
            }
        </table>
    </div>
}