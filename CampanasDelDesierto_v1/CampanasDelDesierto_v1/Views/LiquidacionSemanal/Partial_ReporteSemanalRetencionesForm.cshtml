@using CampanasDelDesierto_v1.Models
@model CampanasDelDesierto_v1.Models.LiquidacionSemanal.VMRetenciones
@{ 
    decimal precioDolar = ViewData["precioDolar"] != null ? (decimal)ViewData["precioDolar"] : 0;
}

<div class="panel panel-info">
    <div class="panel-heading">
        <h3 class="panel-title">Retenciones</h3>
    </div>
    <div class="panel-body">

        <div class="form-horizontal" id="formRetenciones">
            <div style="text-align:center" class="col-xs-offset-2 col-xs-5">
                <label>USD</label>
            </div>
            <div style="text-align:center" class="col-xs-5">
                <label>MXN</label>
            </div>
            <div class="form-group col-xs-12">
                @Html.LabelFor(model => model.abonoAnticipos, htmlAttributes: new { @class = "control-label col-xs-2" })
                @*Precio en USD*@
                <div class="col-xs-5">
                    @Html.EditorFor(model => model.abonoAnticipos, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control",
                       data_mask = "###0.00",
                       data_mask_reverse = "true",
                       onkeyup = "fillPesosColumn(this)"
                   }
               })
                    @Html.ValidationMessageFor(model => model.abonoAnticipos, "", new { @class = "text-danger" })
                </div>
                @*Precio en MXN*@
                <div class="col-xs-5">
                    <input id="abonoAnticiposMXN" class="form-control" readonly="readonly"
                           value="@((precioDolar*Model.abonoAnticipos).ToString("0.00"))" />
                </div>
            </div>
            <div class="form-group col-xs-12">
                @Html.LabelFor(model => model.abonoArboles, htmlAttributes: new { @class = "control-label col-xs-2" })
                @*Precio en USD*@
                <div class="col-xs-5">
                    @Html.EditorFor(model => model.abonoArboles, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control",
                       data_mask = "###0.00",
                       data_mask_reverse = "true",
                       onkeyup = "fillPesosColumn(this)"
                   }
               })
                    @Html.ValidationMessageFor(model => model.abonoArboles, "", new { @class = "text-danger" })
                </div>
                @*Precio en MXN*@
                <div class="col-xs-5">
                    <input id="abonoAnticiposMXN" class="form-control" readonly="readonly"
                           value="@((precioDolar*Model.abonoAnticipos).ToString("0.00"))" />
                </div>
            </div>
            <div class="form-group col-xs-12">
                @Html.LabelFor(model => model.garantiaLimpieza, htmlAttributes: new { @class = "control-label col-xs-2" })
                @*Precio en USD*@
                <div class="col-xs-5">
                    @Html.EditorFor(model => model.garantiaLimpieza, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control",
                       data_mask = "###0.00",
                       data_mask_reverse = "true",
                       onkeyup = "fillPesosColumn(this)"
                   }
               })
                    @Html.ValidationMessageFor(model => model.garantiaLimpieza, "", new { @class = "text-danger" })
                </div>
                @*Precio en MXN*@
                <div class="col-xs-5">
                    <input id="garantiaLimpiezaMXN" class="form-control" readonly="readonly" 
                           value="@((precioDolar*Model.garantiaLimpieza).ToString("0.00"))" />
                </div>
            </div>

            <div class="form-group col-xs-12">
                @Html.LabelFor(model => model.retencionEjidal, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-5">
                    @Html.EditorFor(model => model.retencionEjidal, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control",
                       data_mask = "###0.00",
                       data_mask_reverse = "true",
                       onkeyup = "fillPesosColumn(this)"
                   }
               })
                    @Html.ValidationMessageFor(model => model.retencionEjidal, "", new { @class = "text-danger" })
                </div>
                @*Precio en MXN*@
                <div class="col-xs-5">
                    <input id="retencionEjidalMXN" class="form-control" readonly="readonly" 
                           value="@((precioDolar*Model.retencionEjidal).ToString("0.00"))" />
                </div>
            </div>

            <div class="form-group col-xs-12">
                @Html.LabelFor(model => model.retencionOtro, htmlAttributes: new { @class = "control-label col-xs-2" })
                <div class="col-xs-5">
                    @Html.EditorFor(model => model.retencionOtro, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control",
                       data_mask = "###0.00",
                       data_mask_reverse = "true",
                       onkeyup = "fillPesosColumn(this)"
                   }
               })
                    @Html.ValidationMessageFor(model => model.retencionOtro, "", new { @class = "text-danger" })
                </div>
                @*Precio en MXN*@
                <div class="col-xs-5">
                    <input id="retencionOtroMXN" class="form-control" readonly="readonly" 
                           value="@((precioDolar*Model.retencionOtro).ToString("0.00"))" />
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function fillPesosColumn(dllInput) {
        //Se toma el costo del dolar
        var dllPrice = Number($("#precioDelDolarEnLiquidacion").val());
        //Se toma el monto en doalres
        var dllAmount = Number($(dllInput).val());
        //Se selecciona el input en MXN
        var mxnInput = $('#' + $(dllInput).attr('id') + 'MXN');
        mxnInput.val(numeral(dllPrice*dllAmount).format('0.00'));
    }
</script>