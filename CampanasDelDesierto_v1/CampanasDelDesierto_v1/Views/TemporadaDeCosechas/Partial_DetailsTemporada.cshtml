@using CampanasDelDesierto_v1.Models
@model CampanasDelDesierto_v1.Models.TemporadaDeCosecha.VMPreciosProductos
@{ 
    bool editable = ViewData["editable"] != null ? (bool)ViewData["editable"] : false;
    string funcionAlReestablecer = ViewData["funcionAlReestablecer"] != null? (string)ViewData["funcionAlReestablecer"]:"";

    decimal precioOriginal1 = Model.precioManzanita;
    decimal precioOriginal2 = Model.precioObliza;
    decimal precioOriginal3 = Model.precioMission;
    decimal precioOriginal4 = Model.precioManzanitaOrg;
    decimal precioOriginal5 = Model.precioOblizaOrg;
    decimal precioOriginal6 = Model.precioMissionOrg;

    int? movimientoID = null;
    bool preciosProductosEditados = false;
    if (ViewData["pagoPorProducto"] != null)
    {
        PagoPorProducto pagoPorProducto = (PagoPorProducto)ViewData["pagoPorProducto"];
        movimientoID = pagoPorProducto.idMovimiento;

        decimal precioProducto1 = pagoPorProducto.pagoProducto1 == 0 ? Model.precioManzanita :
            (decimal)Math.Round((double)pagoPorProducto.pagoProducto1 / pagoPorProducto.cantidadProducto1,2);

        decimal precioProducto2 = pagoPorProducto.pagoProducto2 == 0 ? Model.precioObliza :
        (decimal)Math.Round((double)pagoPorProducto.pagoProducto2 / pagoPorProducto.cantidadProducto2, 2);

        decimal precioProducto3 = pagoPorProducto.pagoProducto3 == 0 ? Model.precioMission :
        (decimal)Math.Round((double)pagoPorProducto.pagoProducto3 / pagoPorProducto.cantidadProducto3, 2);

        decimal precioProducto4 = pagoPorProducto.pagoProducto4 == 0 ? Model.precioManzanitaOrg :
    (decimal)Math.Round((double)pagoPorProducto.pagoProducto4 / pagoPorProducto.cantidadProducto4, 2);

        decimal precioProducto5 = pagoPorProducto.pagoProducto5 == 0 ? Model.precioOblizaOrg :
    (decimal)Math.Round((double)pagoPorProducto.pagoProducto5 / pagoPorProducto.cantidadProducto5, 2);

        decimal precioProducto6 = pagoPorProducto.pagoProducto6 == 0 ? Model.precioMissionOrg:
    (decimal)Math.Round((double)pagoPorProducto.pagoProducto6 / pagoPorProducto.cantidadProducto6, 2);

        preciosProductosEditados = precioProducto1 != Model.precioManzanita || precioProducto2 != Model.precioObliza
|| precioProducto3 != Model.precioMission || precioProducto4 != Model.precioManzanitaOrg
 || precioProducto5 != Model.precioOblizaOrg || precioProducto6 != Model.precioMissionOrg;

        Model.precioManzanita = precioProducto1;
        Model.precioObliza = precioProducto2;
        Model.precioMission = precioProducto3;
        Model.precioManzanitaOrg = precioProducto4;
        Model.precioOblizaOrg= precioProducto5;
        Model.precioMissionOrg= precioProducto6;
    }

    int? productorID = (int)ViewData["productorID"];
}

<div class="panel panel-info">
    <div class="panel-heading">
        <h3 class="panel-title">
            <span><strong>Año de Cosecha: </strong>@Model.temporada.rangoTiempo</span>
            <span><strong>Zona: </strong>@Model.zona</span>
        </h3>
    </div>
    <div class="panel-body">
        <div id="formCostosProducto">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.precioManzanita)
                @Html.EditorFor(model => model.precioManzanita, new
           {
               htmlAttributes = new
               {
                   disabled = "disabled",
                   @class = "form-control",
                   data_mask = "###0.00",
                   data_mask_reverse = "true"
               }
           })
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.precioObliza)
                @Html.EditorFor(model => model.precioObliza, new
               {
                   htmlAttributes = new
                   {
                       disabled = "disabled",
                       @class = "form-control",
                       data_mask = "###0.00",
                       data_mask_reverse = "true"
                   }
               })
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.precioMission)
                @Html.EditorFor(model => model.precioMission, new
           {
               htmlAttributes = new
               {
                   disabled = "disabled",
                   @class = "form-control",
                   data_mask = "###0.00",
                   data_mask_reverse = "true"
               }
           })
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.precioManzanitaOrg)
                @Html.EditorFor(model => model.precioManzanitaOrg, new
           {
               htmlAttributes = new
               {
                   disabled = "disabled",
                   @class = "form-control",
                   data_mask = "###0.00",
                   data_mask_reverse = "true"
               }
           })
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.precioOblizaOrg)
                @Html.EditorFor(model => model.precioOblizaOrg, new
           {
               htmlAttributes = new
               {
                   disabled = "disabled",
                   @class = "form-control",
                   data_mask = "###0.00",
                   data_mask_reverse = "true"
               }
           })
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.precioMissionOrg)
                @Html.EditorFor(model => model.precioMissionOrg, new
           {
               htmlAttributes = new
               {
                   disabled = "disabled",
                   @class = "form-control",
                   data_mask = "###0.00",
                   data_mask_reverse = "true"
               }
           })
            </div>

            <a class="pull-right" href="@Url.Action("Edit","TemporadaDeCosechas",
                new { id = Model.temporada.TemporadaDeCosechaID, pagoPorProductoID = movimientoID,
                    productorID =productorID, temporadaID = Model.temporada.TemporadaDeCosechaID })">
                <i class="fa fa-pencil"></i> Editar temporada
            </a>
            @if (editable)
            {
                <input type="checkbox" id="cbEditarCostos" name="cbEditarCostos"
                       class="hidden" onchange="cbChangeEditarCostos(this)" @(preciosProductosEditados ? "checked" : "") />
                    <label for="cbEditarCostos">Editar costos para este registro</label>
            }
        </div>
    </div>
</div>

<script>
    var costoOriginalProducto1 = @precioOriginal1;
    var costoOriginalProducto2 = @precioOriginal2;
    var costoOriginalProducto3 = @precioOriginal3;
    var costoOriginalProducto4 = @precioOriginal4;
    var costoOriginalProducto5 = @precioOriginal5;
    var costoOriginalProducto6 = @precioOriginal6;
    var selector = "#formCostosProducto input[type!='checkbox']";

    function cbChangeEditarCostos(cb){
        var val = $(cb).is(':checked');
        $(selector).attr("disabled",!val)

        if(!val){
            $(selector+"#precioManzanita").val(numeral(costoOriginalProducto1).format('0.00')).trigger('input');
            $(selector+"#precioObliza").val(numeral(costoOriginalProducto2).format('0.00')).trigger('input');
            $(selector+"#precioMission").val(numeral(costoOriginalProducto3).format('0.00')).trigger('input');
            $(selector+"#precioManzanitaOrg").val(numeral(costoOriginalProducto4).format('0.00')).trigger('input');
            $(selector+"#precioOblizaOrg").val(numeral(costoOriginalProducto5).format('0.00')).trigger('input');
            $(selector+"#precioMissionOrg").val(numeral(costoOriginalProducto6).format('0.00')).trigger('input');
            @if (!String.IsNullOrEmpty(funcionAlReestablecer))
            {
                @Html.Raw(funcionAlReestablecer+"()")
            }
        }
    }
</script>

