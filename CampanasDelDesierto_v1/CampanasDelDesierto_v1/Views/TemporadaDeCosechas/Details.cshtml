@using CampanasDelDesierto_v1.Models
@using CampanasDelDesierto_v1.HerramientasGenerales
@model CampanasDelDesierto_v1.Models.TemporadaDeCosecha

@{
        ViewBag.Title = "Importación de Recibos por Temporada";
        Layout = "~/Views/Shared/_Layout.cshtml";
        List<ExcelTools.ExcelParseError> erroresExcel = ViewBag.erroresExcel;
        ExcelTools.ExcelParseError errorPrecios = ViewBag.errorPrecios;

        string errorMsgPrimario = "";
        string erroresModalID = "";
        if (erroresExcel != null && erroresExcel.Count()>0) {
            errorMsgPrimario = "Se presentaron <strong>" + erroresExcel.Count() + " errores</strong> al importar el documento Excel."
                + " Revise la tabla de errores de importación en la parte inferior.";
        }
        if (errorPrecios != null && errorPrecios.isError)
        {
            errorMsgPrimario = errorPrecios+"<br>" + errorMsgPrimario;
        }

        VMConfirmModalAttributes modalOptsEliminarTodos = new VMConfirmModalAttributes
        {
            modalTitle = "Eliminar Todos los Registros",
            callType = VMConfirmModalAttributes.CallType.POSTBACK,
            modalID = "mdlDeleteRecepcion",
            action = "borrarTodos",
            controller = "RecepcionDeProductos",
            routeVals= new { temporadaID = Model.TemporadaDeCosechaID },
            primaryMessage = "Al confirmar este mensaje, confirma que desea eliminar todos los registros importados"+
            " por Excel que no han sido registrados como pagados.",
            modalStyle = new VMConfirmModalAttributes.Style(VMConfirmModalAttributes.Style.StyleTypes.DANGER),
            size = new VMConfirmModalAttributes.Size(VMConfirmModalAttributes.Size.ModalSize.SMALL),
        };
    }
    @Html.Partial("Partial_ConfirmationModal", modalOptsEliminarTodos)
<p>
    <a href="@Url.Action("Index")">
        <i class="glyphicon glyphicon-arrow-left"></i> Historial de Temporadas
    </a>
</p>
<div class="panel panel-info">
    <div class="panel-heading">
        <h3 class="panel-title"><strong>Temporada: </strong>@Model.rangoTiempo</h3>
    </div>
    <div class="panel-body">
        <div class="form-inline">
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.precioProducto1)
                @Html.DisplayFor(model => model.precioProducto1)
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.precioProducto2)
                @Html.DisplayFor(model => model.precioProducto2)
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.precioProducto3)
                @Html.DisplayFor(model => model.precioProducto3)
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.precioProducto4)
                @Html.DisplayFor(model => model.precioProducto4)
            </div>
        </div>
        <a href="@Url.Action("Edit", new { id = Model.TemporadaDeCosechaID })">
            <i class="fa fa-pencil"></i> Editar
        </a> 
    </div>
</div>
@using (Html.BeginForm(null, null, FormMethod.Post,
                            new { id="frmImportExcel", enctype = "multipart/form-data", @class = "form-inline" }))
{
    <div class="">
        @Html.ValidationSummary()
    </div>
    <div class="row">
        @*Controles para la importacion*@
        <div class="col-md-12">
            @*Control para subir archivo*@
            <label for="xlsFile">Archivo Excel</label>
            <input id="xlsFile" name="xlsFile" type="file" class="form-control"
                   accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" />

            @*Boton para confirmar la subida del archivo*@
            <button id="btnUpload" class="btn btn-success" disabled>
                <i class="fa fa-upload"></i> Subir
            </button>

            @*Boton para desplegar instrucciones*@
            <i class="fa fa-question-circle helpIcon"
               onclick="$('#msgAyudaImportacion').slideToggle();
                    $(this).toggleClass('clicked')"
               style="cursor: pointer"></i>
            <img id="imgLoading" src="~/images/loading.gif" style="display:none; width: 2.5em" />

            @*Boton para eliminar todas las importaciones de excel*@
            @if(Model.recepcionesDeProducto == null || Model.recepcionesDeProducto.Count() > 0) { 
                <a data-toggle="modal" data-target="#@modalOptsEliminarTodos.modalID" 
                   class="btn btn-danger pull-right"
                   >Eliminar Todos</a>
            }
        </div>
        @*Instrucciones de importacion*@
        <div id="msgAyudaImportacion" style="display: none;" class="col-md-12 alert alert-info">
            Para importar la información de los productores, cargue en la aplicación el archivo Excel
            de <strong>"Acumulados de recepción de Aceituna"</strong> correspondiente a esta temporada.
            Hecho esto, los datos estarán disponibles para generar pagos semanales de producto y ser
            integrados al balance del productor. La estructura del archivo Excel debe ser como
            la mostrada en la siguiente imagen: <br />
            <div style="text-align: center">
                <img style="border: 1px solid; margin: 1em auto"
                     src="~/images/recepciones/recepciones_excel.png" />
            </div>
            El sistema buscará en la base de datos los registros con el mismo numero de recibo
            que marque el archivo Excel.
            <ul>
                <li>
                    <strong>En caso de encontrarlo</strong>, modificará la información almacenada
                    en la base de datos por la informacion del registro Excel.
                </li>
                <li>
                    <strong>En caso de no encontrarlo</strong>, se creará un nuevo registro de ingreso
                    de producto con las datos del archivo Excel.
                </li>
            </ul>
        </div>
    </div>
}
<br />
@*Panel que muestra la recepcion ingresada en el excel*@
<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title">Ingreso de producto (Importado de Excel)</h3>
    </div>
    <div class="panel-body">
        @if(Model.recepcionesDeProducto!=null && Model.recepcionesDeProducto.Where(rec => rec.importadoDesdeExcel).Count() > 0) { 
        <table class="table table-hover table-striped datatablejs">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => Model.recepcionesDeProducto.FirstOrDefault().numeroRecibo)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => Model.recepcionesDeProducto.FirstOrDefault().numProductor)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => Model.recepcionesDeProducto.FirstOrDefault().fecha)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => Model.recepcionesDeProducto.FirstOrDefault().semana)
                    </th>
                    <th width="20%">
                        @Html.DisplayNameFor(model => Model.recepcionesDeProducto.FirstOrDefault().nombreProductor)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => Model.recepcionesDeProducto.FirstOrDefault().cantidadTonsProd1)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => Model.recepcionesDeProducto.FirstOrDefault().cantidadTonsProd2)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => Model.recepcionesDeProducto.FirstOrDefault().cantidadTonsProd3)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => Model.recepcionesDeProducto.FirstOrDefault().cantidadTonsProd4)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => Model.recepcionesDeProducto.FirstOrDefault().cantidadTonsProd5)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => Model.recepcionesDeProducto.FirstOrDefault().cantidadTonsProd6)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var recepcion in Model.recepcionesDeProducto.Where(rec=>rec.importadoDesdeExcel))
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(model=>recepcion.numeroRecibo)
                        </td>

                        <td>
                            @Html.DisplayFor(model => recepcion.numProductor)
                        </td>
                        <td>
                            @recepcion.fecha.ToString("dd-MMM-yy")
                        </td>
                        <td>
                            @Html.DisplayFor(model => recepcion.semana)
                        </td>
                        <td width="20%">
                            @Html.DisplayFor(model => recepcion.nombreProductor)
                        </td>
                        <td>
                            @Html.DisplayFor(model => recepcion.cantidadTonsProd1)
                        </td>
                        <td>
                            @Html.DisplayFor(model => recepcion.cantidadTonsProd2)
                        </td>
                        <td>
                            @Html.DisplayFor(model => recepcion.cantidadTonsProd3)
                        </td>
                        <td>
                            @Html.DisplayFor(model => recepcion.cantidadTonsProd4)
                        </td>
                        <td>
                            @Html.DisplayFor(model => recepcion.cantidadTonsProd5)
                        </td>
                        <td>
                            @Html.DisplayFor(model => recepcion.cantidadTonsProd6)
                        </td>
                        <td>
                            @if(recepcion.liquidacionYaEmitada || recepcion.pagoYaRegistrado) { 
                            <div class="dropdown_actions">
                                <button onclick="openActionsDropDown(this)"
                                        class="dropbtn btn btn-default">
                                    <i class="glyphicon glyphicon-option-horizontal"></i>
                                </button>
                                <div id="myDropdown" class="dropdown-content">
                                    @if (recepcion.pagoYaRegistrado)
                                    {
                                        <a target="_blank"
                                           href="@Url.Action("Details", "MovimientoFinancieros", new { id = recepcion.pago.idMovimiento })">
                                            Registro de Cosecha</a>
                                    }

                                    @if (recepcion.liquidacionYaEmitada)
                                    {
                                        <a target="_blank"
                                           href="@Url.Action("Details", "MovimientoFinancieros", new { id = recepcion.pago.liquidacionDeCosechaID })">
                                            Registro de Liquidación</a>
                                    }
                                </div>
                            </div>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        }else
        {
            <div class="alert alert-warning">
                No se han importado desde excel registros para esta temporada.
            </div>
        }
    </div>
</div>

@if (!String.IsNullOrEmpty(errorMsgPrimario))
{
    erroresModalID = "importExcelErrorMessage";
    ViewDataDictionary vdd = new ViewDataDictionary();
    vdd.Add("erroresModalID", erroresModalID);
    vdd.Add("errorMsgPrimario", errorMsgPrimario);
    <div>
        @Html.Partial("../Shared/Partial_ExcelErrors", erroresExcel, vdd);
    </div>
}

@section Scripts{
    @if (erroresExcel != null && erroresExcel.Count() > 0) {
        <script>
            $('@("#"+ erroresModalID)').modal();
        </script>
    }
    <script>
        $('#xlsFile').change(function () {
            if(this.files.length)
                $('#btnUpload').prop('disabled',false)
            else
                $('#btnUpload').prop('disabled', true)
        })
        $('#frmImportExcel').submit(function(){
            $('#imgLoading').fadeIn();
            $('#btnUpload').prop('disabled', true)
        })
    </script>
}