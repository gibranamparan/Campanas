@using CampanasDelDesierto_v1.Models
@model CampanasDelDesierto_v1.Models.PrestamoYAbonoCapital
@{
    //Simulacion de tiempo para recopilar intereses
    DateTime fechaActual = DateTime.Today;
    List<CampanasDelDesierto_v1.Models.PrestamoYAbonoCapital.VMInteres> intereses = new List<MovimientoFinanciero.VMInteres>();
    
    if (!Model.isAbonoCapital)
    {
        intereses = Model.generarSeguimientoPagosConInteres(fechaActual);
    }

    ViewDataDictionary vdd = new ViewDataDictionary();
    vdd.Add("fechaInicial", Model.fechaMovimiento);
}

<div class="form-group col-md-4">
    @Html.LabelFor(model => model.cheque, new { @class = "control-label col-md-3" })
    <div class="col-md-9">
        <p class="form-control-static">@Html.DisplayFor(model => model.cheque)</p>
    </div>
</div>
<div class="form-group col-md-4">
    @Html.LabelFor(model => model.concepto, new { @class = "control-label col-md-3" })
    <div class="col-md-9">
        <p class="form-control-static">@Html.DisplayFor(model => model.concepto)</p>
    </div>
</div>
<div class="form-group col-md-4">
    @Html.LabelFor(model => model.proveedor, new { @class = "control-label col-md-3" })
    <div class="col-md-9">
        <p class="form-control-static">@Html.DisplayFor(model => model.proveedor)</p>
    </div>
</div>
<div class="form-group col-md-4">
    @Html.LabelFor(model => model.fechaPagar, new { @class = "control-label col-md-3" })
    <div class="col-md-9">
        <p class="form-control-static">@(Model.fechaPagar.HasValue?Model.fechaPagar.Value.ToString("dd/MMM/yyyy"):"") </ p >
    </div>
</div>
<div class="form-group col-md-4">
    @Html.LabelFor(model => model.pagare, new { @class = "control-label col-md-3" })
    <div class="col-md-9">
        <p class="form-control-static">@Html.DisplayFor(model => model.pagare)</p>
    </div>
</div>
<div class="form-group col-md-4">
    @Html.LabelFor(model => model.montoActivo, new { @class = "control-label col-md-3" })
    <div class="col-md-9">
        <p class="form-control-static">@Html.DisplayFor(model => model.montoActivo)</p>
    </div>
</div>
<div class="form-group col-md-12">
    @Html.LabelFor(model => model.descripcionConcepto, new { @class = "control-label col-md-3" })
    <div class="col-md-9">
        <p class="form-control-static">@Html.DisplayFor(model => model.descripcionConcepto)</p>
    </div>
</div>

@if (!Model.isAbonoCapital) { 
    @Html.Partial("../MovimientoFinancieros/Partial_ListarIntereses", intereses,vdd)
}

<div class="row">
    @if (Model.tipoDeMovimientoDeCapital == PrestamoYAbonoCapital.TipoMovimientoCapital.ABONO)
    {
        if(Model.tipoDeBalance == MovimientoFinanciero.TipoDeBalance.CAPITAL_VENTAS) { 
        <h4>Anticipos Abonados</h4>
            if (Model.prestamosAbonados.Count() > 0)
            {
            bool showMontoActivo = Model.prestamosAbonados.Sum(mov => mov.prestamo.montoActivo) > 0;
            <div class="col-md-12">
                <table class="table table-hover table-striped">
                    <tr>
                        <th>No. Pagaré/Compra</th>
                        <th>@Html.DisplayNameFor(model => model.prestamosAbonados.FirstOrDefault().prestamo.fechaMovimiento)</th>
                        <th>@Html.DisplayNameFor(model => model.prestamosAbonados.FirstOrDefault().prestamo.montoMovimiento)</th>
                        <th>Monto Abonado</th>
                        @if (showMontoActivo) { 
                            <th>Monto por saldar</th>
                        }
                    </tr>
                    @foreach (var mov in Model.prestamosAbonados)
                    {
                        <tr class="@(mov.pagoAInteres? "pagado" : "")">
                            <td>
                                <a href="@Url.Action("Details",new { id = mov.prestamoID })" target="_blank">
                                    Ver: 
                                    @if(mov.prestamo.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.CAPITAL) { 
                                        @Html.DisplayFor(model => ((PrestamoYAbonoCapital)mov.prestamo).pagare)
                                    }
                                    else if(mov.prestamo.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.VENTA_A_CREDITO)
                                    {
                                        @Html.DisplayFor(model => ((VentaACredito)mov.prestamo).ordenCompra)
                                    }
                                </a>
                            </td>
                            <td>@mov.prestamo.fechaMovimiento.ToString("dd/MMMM/yyyy")</td>
                            <td>@Math.Abs(mov.prestamo.montoMovimiento).ToString("C")</td>
                            <td>@Html.DisplayFor(model => mov.monto)</td>
                            @if (showMontoActivo)
                            {
                                <td>@Html.DisplayFor(model => mov.prestamo.montoActivo)</td>
                            }
                        </tr>
                    }
                </table>
            </div>
            }
        }
        else
        {
            <div class="alert alert-warning col-md-12">
                Este abono <strong>no se ha distribuido</strong> en ningún anticipo.
            </div>
        }
    }

    @if (Model.tipoDeMovimientoDeCapital == PrestamoYAbonoCapital.TipoMovimientoCapital.PRESTAMO)
    {
        <h4>Abonos recibidos</h4>
        if (Model.abonosRecibidos.Count() > 0)
        {
            <div class="col-md-12">
                <table class="table table-hover table-striped">
                    <tr>
                        <th>No. Pagaré/Compra</th>
                        <th>@Html.DisplayNameFor(model => model.abonosRecibidos.FirstOrDefault().abono.fechaMovimiento)</th>
                        <th>@Html.DisplayNameFor(model => model.abonosRecibidos.FirstOrDefault().abono.montoMovimiento)</th>
                        <th>Monto Distribuido</th>
                    </tr>
                    @foreach (var mov in Model.abonosRecibidos)
                    {
                        <tr class="@(mov.pagoAInteres? "pagado" : "")">
                            <td>
                                <a href="@Url.Action("Details",new { id = mov.abonoID })" target="_blank">
                                    Ver: @Html.DisplayFor(model=>mov.abono.pagare)
                                </a>
                            </td>
                            <td>@mov.abono.fechaMovimiento.ToString("dd/MMM/yyyy")</td>
                            <td>@Html.DisplayFor(model => mov.abono.montoMovimiento)</td>
                            <td>@Html.DisplayFor(model => mov.monto)</td>
                        </tr>
                    }
                </table>
            </div>
        }
        else
        {
            <div class="alert alert-warning col-md-12">
                Este prestamo <strong>no ha recibido</strong> ningún abono.
            </div>
        }
    }
</div>