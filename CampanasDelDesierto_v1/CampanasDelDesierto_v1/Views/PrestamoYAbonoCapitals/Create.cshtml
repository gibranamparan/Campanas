@using CampanasDelDesierto_v1.Models
@using System;
@model CampanasDelDesierto_v1.Models.PrestamoYAbonoCapital

@{

    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";

    Productor productor = ViewBag.productor;

    /*Just for test*/
    Random random = new Random();
    Model.montoMovimiento = random.Next(1,10)*50;

    const string chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
    Model.cheque = new string(Enumerable.Repeat(chars, 5)
      .Select(s => s[random.Next(s.Length)]).ToArray());
    Model.pagare = new string(Enumerable.Repeat(chars, 5)
      .Select(s => s[random.Next(s.Length)]).ToArray());

}
<p>
    <a href="@Url.Action("Details","Productores", new { id = productor.idProductor })">
        <i class="glyphicon glyphicon-usd"></i> Ver Movimientos de este productor
    </a>
</p>
<div class="panel panel-info">
    <div class="panel-heading">
        <h3 class="panel-title">Información del Productor</h3>
    </div>
    <div class="panel-body">
        @Html.Partial("../Productores/Partial_InfoProductor", productor)
    </div>
</div>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model=> model.idProductor)
    <div class="form-horizontal">
        <h4>Nuevo Movimiento de Capital</h4>
        <hr />
      
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.montoMovimiento, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.montoMovimiento, new
               {
                   htmlAttributes = new { @class = "form-control", data_mask = "###0.00", data_mask_reverse = "true" }
               })
                    @Html.ValidationMessageFor(model => model.montoMovimiento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.fechaMovimiento, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.fechaMovimiento, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.fechaMovimiento, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.cheque, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.cheque, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.cheque, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.concepto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(x => x.concepto, new SelectList(PrestamoYAbonoCapital.getTipoMovimientoCapitalArray(), "Value", "Text"),
                        new { @class = "form-control" })
                </div>
            </div>

        </div>
        <div class="row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.pagare, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.pagare, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.pagare, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.fechaPagar, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.fechaPagar, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.fechaPagar, "", new { @class = "text-danger" })
                </div>
            </div>

            <div id="formGroupProveedor" class="form-group col-md-6" style="display:none">
                @Html.LabelFor(model => model.proveedor, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("proveedor", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.proveedor, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group col-md-12">
            @Html.LabelFor(model => model.nota, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.TextAreaFor(model => model.nota, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.nota, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <button type="submit"class="btn btn-success">Crear</button>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $("#concepto").change(function () {
            if ($(this).val() == "@PrestamoYAbonoCapital.TipoMovimientoCapital.ABONO" ) {
                $("#formGroupProveedor").slideUp();
            } else {
                $("#formGroupProveedor").slideDown();
            }
        })
    </script>
}
