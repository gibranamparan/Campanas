@using CampanasDelDesierto_v1.HerramientasGenerales
@model IEnumerable<CampanasDelDesierto_v1.Models.Productor>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<ExcelTools.ExcelParseError> erroresExcel = ViewBag.erroresExcel;
    ExcelTools.ExcelParseError errorGeneral = ViewBag.errorGeneral;

    string errorMsgPrimario = "";
    string erroresModalID = "";
    if (erroresExcel != null)
    {
        errorMsgPrimario = "Se presentaron <strong>" + erroresExcel.Count() + " errores</strong> al importar el documento Excel."
            + " Revise la tabla de errores de importación en la parte inferior.";
    }
    if (errorGeneral != null && errorGeneral.isError)
    {
        errorMsgPrimario = errorGeneral + "<br>" + errorMsgPrimario;
    }
}
<link href="~/Content/jquery.dataTables.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery.dataTables.min.js"></script>
<h2>Lista de Productores</h2>

<p>
    <a href="@Url.Action("Create")">
        <i class="fa fa-plus-circle"></i> Nuevo Productor
    </a>
</p>
@using (Html.BeginForm(null, null, FormMethod.Post,
                            new { enctype = "multipart/form-data", @class = "form-inline" }))
{
    @Html.ValidationSummary()
    <div class="row">
        <div class="col-md-12">
            <label for="xlsFile">Importar de Excel</label>
            <input id="xlsFile" name="xlsFile" type="file" class="form-control"
                   accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" />
            <button class="btn btn-success">
                <i class="fa fa-upload"></i> Subir
            </button>
        </div>
    </div>
}
<table class="table table-striped table-hover datatablejs">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.numProductor)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.nombreProductor)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.nombreCheque)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.domicilio)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.fechaIntegracion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RFC)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.zona)
            </th>
            <th class="actions"></th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.numProductor)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.nombreProductor)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.nombreCheque)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.domicilio)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.fechaIntegracion)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RFC)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.zona)
                </td>
                <td>
                    <a href="@Url.Action("Edit","Productores",new { id = item.idProductor })">
                        <i class="glyphicon glyphicon-pencil"></i> Editar
                    </a><br />
                    <a href="@Url.Action("Details","Productores",new { id = item.idProductor })">
                        <i class="fa fa-money"></i> Movimientos
                    </a><br />
                    <a href="@Url.Action("Delete","Productores",new { id = item.idProductor })">
                        <i class="glyphicon glyphicon-remove"></i> Eliminar
                    </a>
                </td>
            </tr>
        }

        
    </tbody>
</table>


@if (!String.IsNullOrEmpty(errorMsgPrimario))
{
    erroresModalID = "importExcelErrorMessage";
    ViewDataDictionary vdd = new ViewDataDictionary();
    vdd.Add("erroresModalID", erroresModalID);
    vdd.Add("errorMsgPrimario", errorMsgPrimario);
    <div>
        @Html.Partial("../Shared/Partial_ExcelErrors", erroresExcel, vdd);
    </div>
}


@section Scripts{
    @if (erroresExcel != null && erroresExcel.Count() > 0)
    {
        <script>
            $('@("#"+ erroresModalID)').modal();
        </script>
    }
}