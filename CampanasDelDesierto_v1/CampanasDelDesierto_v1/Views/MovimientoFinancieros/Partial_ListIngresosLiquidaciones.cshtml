@model CampanasDelDesierto_v1.Models.Productor
@using CampanasDelDesierto_v1.Models;

@{
    TemporadaDeCosecha temporada = ViewBag.temporadaSeleccionada;

    @*Solo prestamos y abonos*@
    List<MovimientoFinanciero> movimientos = Model.MovimientosFinancieros
        .Where(mov => mov.TemporadaDeCosechaID == temporada.TemporadaDeCosechaID)
            .Where(mov => mov.tipoDeBalance == MovimientoFinanciero.TipoDeBalance.MOV_LIQUIDACION)
        .OrderBy(mov => mov.fechaMovimiento).ToList();

    movimientos = movimientos.OrderBy(mov => mov.fechaMovimiento).ToList();
    LiquidacionSemanal.VMTotalesLiquidacion totales = new LiquidacionSemanal.VMTotalesLiquidacion(movimientos);
}

@if (Model != null && movimientos.Count() > 0)
{
    <div class="col-xs-12">
        <table class="table table-hover table-striped table-responsive">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.MovimientosFinancieros.FirstOrDefault().fechaMovimiento)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MovimientosFinancieros.FirstOrDefault().montoMovimiento)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MovimientosFinancieros.FirstOrDefault().nombreDeMovimiento)
                    </th>
                    <th style="width: 20em">
                        @Html.DisplayNameFor(model => model.MovimientosFinancieros.FirstOrDefault().concepto)
                    </th>
                    <th class="actions hidden-print"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in movimientos)
                {
                    <tr class="@(item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.LIQUIDACION?"liquidacion":"")
                            @(item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.PAGO_POR_PRODUCTO
                                && ((PagoPorProducto)item).liquidacionDeCosechaID!=null?"pagado":"")
                             @(item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.RENTENCION
                                && ((Retencion)item).estaPagada?"pagado":"")">
                        <td>
                            @item.fechaMovimiento.ToString("dd/MM/yyyy")
                        </td>
                        <td class='@(item.montoMovimiento<0?"montoNegativo":"")'>
                            @Html.DisplayFor(modelItem => item.montoMovimiento)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.nombreDeMovimiento)
                        </td>
                        <td style="width: 20em">
                            <span>@Html.DisplayFor(modelItem => item.concepto)</span>
                            @*Se muestra en el registro de la retencion el monto por pagar para esta retencion en caso de no estar pagada*@
                            @if(item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.RENTENCION && !((Retencion)item).estaPagada)
                            {
                                <span>@Html.DisplayNameFor(model=>((Retencion)item).montoPorPagar): 
                                    @Html.DisplayFor(model => ((Retencion)item).montoPorPagar)</span>
                            }
                        </td>
                        <td class="hidden-print">
                                <div class="dropdown_actions">
                                    <button onclick="openActionsDropDown(this)"
                                            class="dropbtn btn btn-default">
                                        <i class="glyphicon glyphicon-option-horizontal"></i>
                                    </button>
                                    <div id="myDropdown"
                                         class="dropdown-content">
                                        @if (!(item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.RENTENCION))
                                        {   //Opciones para liquidaciones y ingresos de cosecha
                                            if (!(item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.PAGO_POR_PRODUCTO && ((PagoPorProducto)item).yaLiquidado))
                                            {
                                                <a href="@Url.Action("Edit",item.getNombreControlador(), new { id = item.idMovimiento })">
                                                    <i class="glyphicon glyphicon-edit"></i> Editar
                                                </a>
                                            }

                                            <a href="@Url.Action("Details","MovimientoFinancieros", new { id = item.idMovimiento })">
                                                <i class="glyphicon glyphicon-print"></i> Detalles
                                            </a>

                                            if (!(item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.PAGO_POR_PRODUCTO && ((PagoPorProducto)item).yaLiquidado))
                                            {
                                                <a href="@Url.Action("Delete", "MovimientoFinancieros", new { id = item.idMovimiento })">
                                                    <i class="glyphicon glyphicon-remove"></i> Borrar
                                                </a>
                                            }
                                        }
                                        else //Opciones para retenciones
                                        {
                                            <a href="@Url.Action("cheques",item.getNombreControlador(), new { id = item.idMovimiento })">
                                                <i class="fa fa-money"></i> Cheques
                                            </a>
                                        }

                                    </div>
                                </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="alert alert-warning col-md-12">
        <strong>No existen</strong> ingresos ni liquidaciones en este periodo.
    </div>
}
<div class="pull-right" style="padding-right:2em">
    <span><strong style="color:red">TOTAL DE INGRESOS: </strong>@Math.Abs(totales.ingresos).ToString("C")</span> |
    <span><Strong style="color:red">TOTAL LIQUIDADO: </Strong>@Math.Abs(totales.liquidado).ToString("C")</span> |
    <span><Strong style="color:red">TOTAL RETENIDO: </Strong>@Math.Abs(totales.retenido).ToString("C")</span>
</div>

