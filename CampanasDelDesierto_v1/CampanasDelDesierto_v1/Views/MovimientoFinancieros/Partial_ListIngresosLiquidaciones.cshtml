@model CampanasDelDesierto_v1.Models.Productor
@using CampanasDelDesierto_v1.Models;

@{
    TemporadaDeCosecha temporada = ViewBag.temporadaSeleccionada;

    @*Solo prestamos y abonos*@
    List<MovimientoFinanciero> movimientos = Model.MovimientosFinancieros
        .Where(mov => mov.TemporadaDeCosechaID == temporada.TemporadaDeCosechaID)
            .Where(mov => mov.tipoDeBalance == MovimientoFinanciero.TipoDeBalance.MOV_LIQUIDACION)
        .OrderBy(mov => mov.fechaMovimiento).ToList();

    movimientos = movimientos.OrderBy(mov => mov.fechaMovimiento).ToList();
    LiquidacionSemanal.VMTotalesLiquidacion totales = new LiquidacionSemanal.VMTotalesLiquidacion(movimientos);
}

@if (Model != null && movimientos.Count() > 0)
{
    if(movimientos.Where(mov=>mov.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.RENTENCION).Count()>0)
    {
        <div class="col-md-6 hidden-print pull-right" style="text-align:right">
            <strong>Liberación de retenciones: </strong>
            <a href="@Url.Action("cheques","Retencion",new { productorID = Model.idProductor,
                   temporadaID = temporada.TemporadaDeCosechaID, tipoRetencion = Retencion.TipoRetencion.SANIDAD })">
                <i class="fa fa-arrow-right"></i><span>@Retencion.NombreRetencion.SANIDAD</span>
            </a><span>|</span>
            <a href="@Url.Action("cheques","Retencion",new { productorID = Model.idProductor,
                   temporadaID = temporada.TemporadaDeCosechaID, tipoRetencion = Retencion.TipoRetencion.EJIDAL })">
                <i class="fa fa-arrow-right"></i><span>@Retencion.NombreRetencion.EJIDAL</span>
            </a><span>|</span>
            <a href="@Url.Action("cheques","Retencion",new { productorID = Model.idProductor,
                   temporadaID = temporada.TemporadaDeCosechaID, tipoRetencion = Retencion.TipoRetencion.OTRO })">
                <i class="fa fa-arrow-right"></i><span>@Retencion.NombreRetencion.OTRO</span>
            </a><span>|</span>
        </div>
    }
    <div class="col-xs-12">
        <table class="table table-hover table-striped table-responsive">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.MovimientosFinancieros.FirstOrDefault().fechaMovimiento)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MovimientosFinancieros.FirstOrDefault().montoMovimiento)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MovimientosFinancieros.FirstOrDefault().nombreDeMovimiento)
                    </th>
                    <th style="width: 20em">
                        @Html.DisplayNameFor(model => model.MovimientosFinancieros.FirstOrDefault().concepto)
                    </th>
                    <th class="actions hidden-print"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in movimientos)
                {
                    bool isRetencion = item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.RENTENCION;
                    bool notIsRetencionAbono = isRetencion &&
                            !(((Retencion)item).tipoDeDeduccion == Retencion.TipoRetencion.ABONO_ARBOLES
                                || ((Retencion)item).tipoDeDeduccion == Retencion.TipoRetencion.ABONO_ANTICIPO);
                    bool isLiquidacion = item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.LIQUIDACION;
                    bool isPagoPorProductoPagado = item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.PAGO_POR_PRODUCTO
                                && ((PagoPorProducto)item).liquidacionDeCosechaID != null;


                    <tr class="@(isLiquidacion?"liquidacion":"") @(isPagoPorProductoPagado?"pagado":"")">
                        <td>
                            @item.fechaMovimiento.ToString("dd/MM/yyyy")
                        </td>
                        <td class='@(item.montoMovimiento<0?"montoNegativo":"")'>
                            @Html.DisplayFor(modelItem => item.montoMovimiento)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.nombreDeMovimiento)
                        </td>
                        <td style="width: 20em">
                            <span>@Html.DisplayFor(modelItem => item.concepto)</span>
                        </td>
                        <td class="hidden-print">
                            @if (!isRetencion || notIsRetencionAbono)
                            {
                                @*Se muestra boton de opciones*@
                                <div class="dropdown_actions">
                                    <button onclick="openActionsDropDown(this)"
                                            class="dropbtn btn btn-default">
                                        <i class="glyphicon glyphicon-option-horizontal"></i>
                                    </button>
                                    <div id="myDropdown" class="dropdown-content">
                                        @*Opciones para liquidaciones y ingresos de cosecha*@
                                        @if (!(item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.PAGO_POR_PRODUCTO && ((PagoPorProducto)item).yaLiquidado))
                                        {
                                            <a href="@Url.Action("Edit", item.getNombreControlador(), new { id = item.idMovimiento })">
                                                <i class="glyphicon glyphicon-edit"></i> Editar
                                            </a>
                                        }

                                        <a href="@Url.Action("Details", "MovimientoFinancieros", new { id = item.idMovimiento })">
                                            <i class="glyphicon glyphicon-print"></i> Detalles
                                        </a>

                                        if (!(item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.PAGO_POR_PRODUCTO && ((PagoPorProducto)item).yaLiquidado))
                                        {
                                            <a href="@Url.Action("Delete", "MovimientoFinancieros", new { id = item.idMovimiento })">
                                                <i class="glyphicon glyphicon-remove"></i> Borrar
                                            </a>
                                        }
                                    </div>
                                </div>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="alert alert-warning col-md-12">
        <strong>No existen</strong> ingresos ni liquidaciones en este periodo.
    </div>
}
<div class="pull-right" style="padding-right:2em">
    <span><strong style="color:red">TOTAL DE INGRESOS: </strong>@Math.Abs(totales.ingresos).ToString("C")</span> |
    <span><Strong style="color:red">TOTAL LIQUIDADO: </Strong>@Math.Abs(totales.liquidado).ToString("C")</span> |
    <span><Strong style="color:red">TOTAL RETENIDO: </Strong>@Math.Abs(totales.retenido).ToString("C")</span>
</div>

