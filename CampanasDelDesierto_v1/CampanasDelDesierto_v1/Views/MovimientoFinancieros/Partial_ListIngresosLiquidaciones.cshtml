@model CampanasDelDesierto_v1.Models.Productor
@using CampanasDelDesierto_v1.Models;

@{
    int temporada = ViewBag.temporada;

    @*Solo prestamos y abonos*@
var movimientos = Model.MovimientosFinancieros
    .Where(mov => mov.TemporadaDeCosechaID == temporada)
        .Where(mov => mov.isMovimientoDeLiquidacion())
    .OrderBy(mov => mov.fechaMovimiento).ToList();
}

@if (Model != null && movimientos.Count() > 0)
{
    <div class="col-md-12">
        <table class="table table-hover table-striped">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.MovimientosFinancieros.FirstOrDefault().fechaMovimiento)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MovimientosFinancieros.FirstOrDefault().montoMovimiento)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MovimientosFinancieros.FirstOrDefault().nombreDeMovimiento)
                </th>
                <th>
                    Concepto
                </th>
                <th class="actions"></th>
            </tr>

            @foreach (var item in movimientos)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.fechaMovimiento)
                    </td>
                    <td class='@(item.montoMovimiento<0?"montoNegativo":"")' @(item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.LIQUIDACION ? "style=color:green" : "")>
                        @Html.DisplayFor(modelItem => item.montoMovimiento)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.nombreDeMovimiento)
                    </td>
                    <td>
                        @if (item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.CAPITAL)
                        {
                            @Html.DisplayFor(modelItem => ((PrestamoYAbonoCapital)item).concepto)
                        }
                    </td>
                    <td>
                        <div class="dropdown_actions">
                            <button onclick="openActionsDropDown(this)"
                                    class="dropbtn btn btn-default">
                                <i class="glyphicon glyphicon-option-horizontal"></i>
                            </button>
                            <div id="myDropdown"
                                 class="dropdown-content">
                                <a href="@Url.Action("Edit",item.getNombreControlador(), new { id = item.idMovimiento })">
                                    <i class="glyphicon glyphicon-edit"></i> Editar
                                </a>

                                <a href="@Url.Action("Details","MovimientoFinancieros", new { id = item.idMovimiento })">
                                    <i class="glyphicon glyphicon-print"></i> Detalles
                                </a>

                                <a href="@Url.Action("Delete","MovimientoFinancieros", new { id = item.idMovimiento })">
                                    <i class="glyphicon glyphicon-remove"></i> Borrar
                                </a>
                            </div>
                        </div>
                    </td>
                </tr>
            }

        </table>
    </div>
}
else
{
    <div class="alert alert-warning col-md-12">
        <strong>No existen</strong> ingresos ni liquidaciones en este periodo.
    </div>
}

<script>
    function submitBusqueda(ddl) {
        $(ddl).closest("form").submit();
    }
</script>
