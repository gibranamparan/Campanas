@model CampanasDelDesierto_v1.Models.Productor
@using CampanasDelDesierto_v1.Models;

@{ 
    TemporadaDeCosecha temporada = ViewBag.temporadaSeleccionada;
    MovimientoFinanciero adeudo = Model.adeudoInicialArboles;

    @*Solo ventas de olivo*@
    var movimientos = Model.MovimientosFinancieros
    .Where(mov => mov.TemporadaDeCosechaID == temporada.TemporadaDeCosechaID)
    .Where(mov => mov.tipoDeBalance == MovimientoFinanciero.TipoDeBalance.VENTA_OLIVO)
    .OrderBy(mov => mov.fechaMovimiento).ToList();

    List<TemporadaDeCosecha> temporadas = ViewBag.temporadas;
}

@if (Model != null && movimientos.Count() > 0)
{
    <div class="col-xs-12">
        <table class="table table-hover table-striped table-responsive">
            <thead>
                <tr>
                    <th>No. Pagaré</th>
                    <th>
                        @Html.DisplayNameFor(model => model.MovimientosFinancieros.FirstOrDefault().fechaMovimiento)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.MovimientosFinancieros.FirstOrDefault().montoMovimiento)
                    </th>
                    <th style="width: 20em">
                        @Html.DisplayNameFor(model => model.MovimientosFinancieros.FirstOrDefault().concepto)
                    </th>
                    <th class="actions hidden-print"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in movimientos)
                {
                    <tr>
                        <td>
                            @if (item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.VENTA_A_CREDITO)
                            {
                                @Html.DisplayFor(model => ((VentaACredito)item).pagareVenta)
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.fechaMovimiento)
                        </td>
                        <td class='@(item.montoMovimiento<0?"montoNegativo":"")'
                            @(item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.LIQUIDACION ? "style=color:green" : "")>
                            @(Math.Abs(item.montoMovimiento).ToString("C"))
                        </td>
                        <td style="width: 20em">
                            @Html.DisplayFor(modelItem => item.concepto)
                        </td>
                        <td class="hidden-print">
                            @*Solo se mostrara el boton de funciones Si el movimiento no es una rentencion y
                        ademas no es un ingreso de de cosecha ya reportado como liquidado*@
                            @if (!(item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.CAPITAL
                        && ((PrestamoYAbonoCapital)item).abonoEnLiquidacionID != null)
                    )
                            {
                                <div class="dropdown_actions">
                                    <button onclick="openActionsDropDown(this)"
                                            class="dropbtn btn btn-default">
                                        <i class="glyphicon glyphicon-option-horizontal"></i>
                                    </button>
                                    <div id="myDropdown"
                                         class="dropdown-content">
                                        <a href="@Url.Action("Edit",item.getNombreControlador(), new { id = item.idMovimiento })">
                                            <i class="glyphicon glyphicon-edit"></i> Editar
                                        </a>

                                        <a href="@Url.Action("Details","MovimientoFinancieros", new { id = item.idMovimiento })">
                                            <i class="glyphicon glyphicon-print"></i> Detalles
                                        </a>

                                        <a href="@Url.Action("Delete","MovimientoFinancieros", new { id = item.idMovimiento })">
                                            <i class="glyphicon glyphicon-remove"></i> Borrar
                                        </a>
                                    </div>
                                </div>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>         
    </div>
}
else
{
    <div class="alert alert-warning col-md-12">
        <strong>No existen</strong> movimientos financieros en este periodo para este productor.
    </div>
}

<script>
    function submitBusqueda(ddl) {
        $(ddl).closest("form").submit();
    }
</script>