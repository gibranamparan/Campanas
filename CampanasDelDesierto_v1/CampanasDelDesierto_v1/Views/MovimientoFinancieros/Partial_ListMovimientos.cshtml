@model CampanasDelDesierto_v1.Models.Productor
@using CampanasDelDesierto_v1.Models;

@{ 
    var movimientos = Model.MovimientosFinancieros.OrderBy(mov => mov.fechaMovimiento).ToList();
}

<p>
    @Html.ActionLink("Capital", "Create", "PrestamoYAbonoCapitals", new { id = Model.idProductor }, new { @class = "btn btn-primary" })
    @Html.ActionLink("Pago por Productos", "Create", "PagosPorProductos", new { id = Model.idProductor }, new { @class = "btn btn-primary" })
    @Html.ActionLink("Ventas a credito", "Create", "VentaACreditos", new { id = Model.idProductor }, new { @class = "btn btn-primary" })
</p>
@if (Model != null && Model.MovimientosFinancieros.Count() > 0)
{
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.MovimientosFinancieros.FirstOrDefault().fechaMovimiento)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MovimientosFinancieros.FirstOrDefault().montoMovimiento)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MovimientosFinancieros.FirstOrDefault().nombreDeMovimiento)
            </th>
            <th>
                Proveedor / Concepto
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MovimientosFinancieros.FirstOrDefault().balance)
            </th>
            <th class="actions"></th>
        </tr>

        @foreach (var item in movimientos)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.fechaMovimiento)
                </td>
                <td class='@(item.montoMovimiento<0?"montoNegativo":"")'>
                    @Html.DisplayFor(modelItem => item.montoMovimiento)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.nombreDeMovimiento)
                </td>
                <td>
                    @if(item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.CAPITAL)
                    {
                        @(((PrestamoYAbonoCapital)item).proveedor)
                    }
                </td>
                <td class='@(item.balance<0?"montoNegativo":"")'>
                    @Html.DisplayFor(modelItem => item.balance)
                </td>
                <td>
                    <div class="dropdown_actions">
                        <button onclick="openActionsDropDown(this)"
                                class="dropbtn btn btn-default">
                            <i class="glyphicon glyphicon-option-horizontal"></i>
                        </button>
                        <div id="myDropdown"
                             class="dropdown-content">
                            <a href="@Url.Action("Edit",item.getNombreControlador(), new { id = item.idMovimiento })">
                                <i class="glyphicon glyphicon-edit"></i> Editar
                            </a>

                            <a href="@Url.Action("Details","MovimientoFinancieros", new { id = item.idMovimiento })">
                                <i class="glyphicon glyphicon-print"></i> Detalles
                            </a>

                            <a href="@Url.Action("Delete","MovimientoFinancieros", new { id = item.idMovimiento })">
                                <i class="glyphicon glyphicon-remove"></i> Borrar
                            </a>
                        </div>
                    </div>
                </td>
            </tr>
        }

    </table>
}
else
{
    <div class="alert alert-warning">
        <strong>No existen</strong> movimientos financieros para este productor.
    </div>
}