@model CampanasDelDesierto_v1.Models.Productor
@using CampanasDelDesierto_v1.Models;

@{ 
    DateTime fechaActual = DateTime.Today.AddMonths(5);
    int temporada = ViewBag.temporada;

    @*Solo prestamos y abonos*@
    var movimientos = Model.MovimientosFinancieros
        .Where(mov => mov.TemporadaDeCosechaID == temporada)
        .Where(mov => mov.tipoDeBalance == MovimientoFinanciero.TipoDeBalance.CAPITAL_VENTAS)
        .OrderBy(mov=>mov.fechaMovimiento).ToList();
    List<TemporadaDeCosecha> temporadas = ViewBag.temporadas;
}

@if (Model != null && movimientos.Count() > 0)
{
    <div class="col-md-12">
        <table class="table table-hover table-striped">
            <tr>
                <th>No. Pagaré/Compra</th>
                <th>
                    @Html.DisplayNameFor(model => model.MovimientosFinancieros.FirstOrDefault().fechaMovimiento)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MovimientosFinancieros.FirstOrDefault().montoMovimiento)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MovimientosFinancieros.FirstOrDefault().nombreDeMovimiento)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MovimientosFinancieros.FirstOrDefault().concepto)
                </th>
                <th>
                    Monto Activo
                </th>
                <th>
                    Interes Devengado
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MovimientosFinancieros.FirstOrDefault().balance)
                </th>
                <th class="actions"></th>
            </tr>

            @foreach (var item in movimientos)
            {
                <tr >
                    <td>
                        @if(item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.CAPITAL) { 
                            @Html.DisplayFor(model => ((PrestamoYAbonoCapital)item).pagare)
                        }
                        else if (item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.VENTA_A_CREDITO)
                        {
                            @Html.DisplayFor(model => ((VentaACredito)item).ordenCompra)
                        }
                    </td>
                    <td >
                        @Html.DisplayFor(modelItem => item.fechaMovimiento)
                    </td>
                    <td class='@(item.montoMovimiento<0?"montoNegativo":"")' 
                        @(item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.LIQUIDACION ? "style=color:green" : "")>
                        @Html.DisplayFor(modelItem => item.montoMovimiento)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.nombreDeMovimiento)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.concepto)
                    </td>
                    <td>
                        @if (item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.CAPITAL
                        || item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.VENTA_A_CREDITO)
                        {
                            @Html.DisplayFor(modelItem => item.montoActivo)
                        }
                    </td>
                    <td>
                        @if (item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.CAPITAL
                        || item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.VENTA_A_CREDITO)
                        {
                            var intereses = item.generarSeguimientoPagosConInteres(fechaActual);
                            var interesDevengado = (intereses != null && intereses.Count() > 0) ? 
                                intereses.Last().interesAcum : 0;
                            @Math.Abs(interesDevengado).ToString("C");
                        }
                    </td>
                    <td class='@(item.balance<0?"montoNegativo":"")'>
                        @Html.DisplayFor(modelItem => item.balance)
                    </td>
                    <td>
                        @*Solo se mostrara el boton de funciones Si el movimiento no es una rentencion y 
                            ademas no es un ingreso de de cosecha ya reportado como liquidado*@
                        @if (!(item.getTypeOfMovement() == MovimientoFinanciero.TypeOfMovements.CAPITAL
                                && ((PrestamoYAbonoCapital)item).abonoEnliquidacionID != null)
                            ) {
                            <div class="dropdown_actions">
                                <button onclick="openActionsDropDown(this)"
                                        class="dropbtn btn btn-default">
                                    <i class="glyphicon glyphicon-option-horizontal"></i>
                                </button>
                                <div id="myDropdown"
                                     class="dropdown-content">
                                    <a href="@Url.Action("Edit",item.getNombreControlador(), new { id = item.idMovimiento })">
                                        <i class="glyphicon glyphicon-edit"></i> Editar
                                    </a>

                                    <a href="@Url.Action("Details","MovimientoFinancieros", new { id = item.idMovimiento })">
                                        <i class="glyphicon glyphicon-print"></i> Detalles
                                    </a>

                                    <a href="@Url.Action("Delete","MovimientoFinancieros", new { id = item.idMovimiento })">
                                        <i class="glyphicon glyphicon-remove"></i> Borrar
                                    </a>
                                </div>
                            </div>
                        }
                    </td>
                </tr>
            }

        </table>
    </div>
}
else
{
    <div class="alert alert-warning col-md-12">
        <strong>No existen</strong> movimientos financieros en este periodo para este productor.
    </div>
}

<script>
    function submitBusqueda(ddl) {
        $(ddl).closest("form").submit();
    }
</script>