@using CampanasDelDesierto_v1.Models
@model CampanasDelDesierto_v1.Models.Producto

@{
    ViewBag.Title = "Editar Producto";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div>
    <a href="@Url.Action("Index")">
        <i class="glyphicon glyphicon-arrow-left"></i>Volver a la lista de productos
    </a>
</div>

<div class="panel panel-primary">
    <div class="panel-heading">
        <h3 class="panel-title">@ViewBag.Title</h3>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.idProducto)

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.nombreProducto, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.nombreProducto, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.nombreProducto, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.costo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.costo, new
                   {
                       htmlAttributes = new
                       {
                           @class = "form-control",
                           data_mask = "###0.00",
                           data_mask_reverse = "true"
                       }
                   })
                        @Html.ValidationMessageFor(model => model.costo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.UnidadMedida, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("UnidadMedida", Producto.getUnidadesDeMedida(), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UnidadMedida, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.isArbolAceituna, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.isArbolAceituna, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.isArbolAceituna, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row col-md-12">
                    @Html.LabelFor(model => model.descripcion)
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.descripcion,
                           new { htmlAttributes = new { @class = "form-control col-md-12", style = "resize:vertical" } })
                        @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        <button class="btn btn-primary">Guardar</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
